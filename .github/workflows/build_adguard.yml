name: Build AdGuardHome Rules (with CDN compression)

on:
  schedule:
    - cron: "0 */2 * * *"   # 每两小时执行
  workflow_dispatch:         # 支持手动触发

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Download rule sources
        run: |
          mkdir -p tmp
          urls=(
            "https://raw.githubusercontent.com/REIJI007/AdBlock_Rule_For_Clash/main/adblock_reject.txt"
            "https://raw.githubusercontent.com/privacy-protection-tools/anti-AD/master/anti-ad-surge2.txt"
          )
          for url in "${urls[@]}"; do
              filename=$(basename "$url")
              echo "⬇️ Downloading $url -> tmp/$filename"
              curl -sSL --retry 3 "$url" -o "tmp/$filename"
          done

      - name: Convert & compress to AdGuard Home format
        run: |
          python3 - <<'EOF'
          import re, glob
          from collections import defaultdict

          def compress_to_wildcard(domains):
              """
              将同一二级域名的多个子域压缩为泛域名
              """
              grouped = defaultdict(set)
              for d in domains:
                  parts = d.split(".")
                  if len(parts) >= 3:
                      base = ".".join(parts[-2:])   # 取后两段，如 cdnhwc2.com
                      grouped[base].add(d)
                  else:
                      grouped[d].add(d)

              compressed = set()
              for base, group in grouped.items():
                  subs = {x for x in group if x.count(".") > base.count(".")}
                  if len(subs) >= 3:  # 超过3个相似子域时使用泛域名
                      compressed.add(f"*.{base}")
                  else:
                      compressed.update(group)
              return compressed

          all_domains = set()
          files = glob.glob("tmp/*")
          for file in files:
              with open(file, "r", encoding="utf-8") as f:
                  for line in f:
                      line = line.strip()
                      if not line or line.startswith(("!", "[", "#")):
                          continue
                      line = re.sub(r"^-+\s*'?", "", line)
                      line = line.rstrip("'").lstrip(". ")
                      if not re.match(r"^[A-Za-z0-9.-]+\.[A-Za-z]{2,}$", line):
                          continue
                      all_domains.add(line)

          print(f"📦 原始域名数量: {len(all_domains)}")

          # 泛域名压缩
          compressed_domains = compress_to_wildcard(all_domains)
          print(f"✅ 压缩后域名数量: {len(compressed_domains)}")

          # 生成 AdGuardHome 格式
          output = sorted({f"||{d}^" for d in compressed_domains})

          # 写入文件
          with open("AdGuardHome.txt", "w", encoding="utf-8") as f:
              f.write(f"! 生成时间: 自动构建\n")
              f.write(f"! 原始规则数: {len(all_domains)}\n")
              f.write(f"! 压缩后规则数: {len(compressed_domains)}\n\n")
              f.write("\n".join(output))

          print("✅ 已生成 AdGuardHome.txt")
          EOF

      - name: Commit and push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add AdGuardHome.txt
          git commit -m "🧩 Auto-build AdGuardHome rules with wildcard compression [skip ci]" || echo "No changes to commit"
          git push origin HEAD:main
